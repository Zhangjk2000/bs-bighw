{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\taskManage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\taskManage\\index.vue","mtime":1640332804520},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZGVsZXRlQW5ub3RhdGVUZXh0QXBpLAogIHVwZGF0ZUFubm90YXRlVGV4dEluZm9BcGksCiAgcmVtb3ZlQWxsQW5ub3RhdGVUZXh0QXBpLAogIGFkZFRhc2tBcGksCiAgcmVjZWl2ZVRhc2tBcGkKfSBmcm9tICJAL2FwaS9hbm5vdGF0ZVRleHQiOwppbXBvcnQge2dldFRva2VufSBmcm9tICJAL3V0aWxzL2F1dGgiOwppbXBvcnQge21hcEdldHRlcnN9IGZyb20gInZ1ZXgiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUYWJsZUxpc3QiLAogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcihzdGF0dXMpIHsKICAgICAgY29uc3Qgc3RhdHVzTWFwID0gewogICAgICAgIOW3sumihuWPljogInN1Y2Nlc3MiLAogICAgICAgIOacqumihuWPljogImdyYXkiLAogICAgICAgIOW3suWujOaIkDogImRvbmUiLAogICAgICB9OwogICAgICByZXR1cm4gc3RhdHVzTWFwW3N0YXR1c107CiAgICB9LAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGVja0xpc3Q6IFtdLAogICAgICBzZWFyY2hUYXJnZXQ6ICLmj4/ov7AiLCAvLyDmkJzntKLlr7nosaEKICAgICAgc2hvd1Rhc2tGb3JtOiBmYWxzZSwKICAgICAga2V5d29yZHM6ICIiLCAvLyDmkJzntKLlhbPplK7or40KICAgICAgZmlsdGVyTGlzdDogW10sIC8v56ym5ZCI5p2h5Lu255qE5pWw5o2uCiAgICAgIGltZ0xpc3Q6IFtdLAogICAgICBsaXN0OiBbXSwgLy8g5omA5pyJ5pWw5o2u5YiX6KGoCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLCAvL+WKoOi9veaViOaenAogICAgICBzaG93RWRpdEZvcm06IGZhbHNlLCAvL+e8lui+keahhueahOaYvumakAogICAgICBsaXN0RWRpdEluZGV4OiAwLCAvLyDnvJbovpHntKLlvJUKICAgICAgaGFuZGxlSXRlbUlkOiAwLCAvLyDmk43kvZzmnaHnm67nmoRpZAogICAgICB0YXNrZm9ybTogewogICAgICAgIG5hbWU6ICIiLAogICAgICAgIHN0YXR1czogIiIsCiAgICAgICAgaW1nczogW10sCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICB9LAogICAgICBmb3JtOiB7CiAgICAgICAgLy/nvJbovpHmoYbmlbDmja4KICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGV4dDogIiIsCiAgICAgIH0sCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOe8lui+keahhuWuveW6pgogICAgd2lkdGgoKSB7CiAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aCA8PSA0MDAgPyAiODAlIiA6ICIzMCUiOwogICAgfSwKICAgIHRva2VuKCkgewogICAgICByZXR1cm4gZ2V0VG9rZW4oKTsKICAgIH0sCiAgICAuLi5tYXBHZXR0ZXJzKFsidGFza0xpc3QiXSksCiAgICAuLi5tYXBHZXR0ZXJzKFsiYW5ub3RhdGVUZXh0TGlzdCJdKSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxpc3QgPSB0aGlzLmZpbHRlckxpc3QgPSB0aGlzLnRhc2tMaXN0OwogICAgdGhpcy5pbWdMaXN0ID0gdGhpcy5hbm5vdGF0ZVRleHRMaXN0OwogICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0SW1nKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmNoZWNrTGlzdCkKICAgIH0sCiAgICBnZXRQcmV2aWV3SW1nTGlzdDogZnVuY3Rpb24gKGluZGV4KSB7CiAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmltZ0xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBhcnIucHVzaCh0aGlzLmltZ0xpc3RbaSArIGluZGV4XS5pbWcpOwogICAgICAgIGlmIChpICsgaW5kZXggPj0gdGhpcy5pbWdMaXN0Lmxlbmd0aCAtIDEpIHsgLy8g5Li65LqG5Y+W5ZCO6L655bCP5YC877yI6YeH55So57ud5a+55YC877yJCiAgICAgICAgICBpbmRleCA9IDAgLSAoaSArIDEpOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gYXJyOwogICAgfSwKICAgIEFkZFRvSW1nTGlzdChpbWcsIGlkKSB7CiAgICAgIGxldCBpbmRleCA9IHRoaXMuY2hlY2tlZExpc3QuaW5kZXhPZihpZCkKICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgIHRoaXMuY2hlY2tlZExpc3QucHVzaChpZCkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNoZWNrZWRMaXN0LnNwbGljZShpbmRleCwgMSkKICAgICAgfQogICAgICB0aGlzLnRhc2tmb3JtLmltZ3MucHVzaChpbWcpCiAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygiZnVjayIpCiAgICB9LAogICAgdGFza0NyZWF0ZSgpIHsKICAgICAgdGhpcy5zaG93VGFza0Zvcm0gPSB0cnVlOwogICAgfSwKICAgIG9uQmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgY29uc3QgaXNJTUFHRSA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnIHx8ICdpbWFnZS9naWYnIHx8ICdpbWFnZS9wbmcnIHx8ICd2aWRlby9tcDQnIHx8ICd2aWRlby9hdmknIHx8ICd2aWRlby9ybXZiJzsKCiAgICAgIGlmICghaXNJTUFHRSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOaWh+S7tuWPquiDveaYr+WbvueJh+aIluiAheinhumikeagvOW8jyEnKTsKICAgICAgfQogICAgICByZXR1cm4gaXNJTUFHRTsKICAgIH0sCiAgICAvKioKICAgICAqIOS4iuS8oOaIkOWKn+eahOWbnuiwg+WHveaVsAogICAgICogQHBhcmFtIHJlc3BvbnNlIOWTjeW6lOaVsOaNrgogICAgICovCiAgICBoYW5kbGVTdWNjZXNzKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmNoZWNrTGlzdCk7CiAgICAgIHRoaXMudGFza2Zvcm0uaW1ncyA9IHRoaXMuY2hlY2tMaXN0OwogICAgICB0aGlzLmZpbHRlckxpc3QucHVzaCh0aGlzLnRhc2tmb3JtKTsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLku7vliqHliJvlu7rmiJDlip8iKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInVzZXIvc2V0VGFza0xpc3QiLCB0aGlzLmZpbHRlckxpc3QpOwogICAgICBjb25zb2xlLmxvZygiJXMiLCB0aGlzLnRhc2tmb3JtLm5hbWUpOwogICAgICBhZGRUYXNrQXBpKHsKICAgICAgICBuYW1lOiB0aGlzLnRhc2tmb3JtLm5hbWUsCiAgICAgICAgc3RhdHVzOiB0aGlzLnRhc2tmb3JtLnN0YXR1cywKICAgICAgICBpbWdzOiB0aGlzLnRhc2tmb3JtLmltZ3MsCiAgICAgICAgZGVzY3JpcHRpb246IHRoaXMudGFza2Zvcm0uZGVzY3JpcHRpb24KICAgICAgfSk7CiAgICAgIHRoaXMuc2hvd1Rhc2tGb3JtID0gZmFsc2U7CiAgICB9LAogICAgLyoqCiAgICAgKiDkuIrkvKDlpLHotKXlm57osIPlh73mlbAKICAgICAqLwogICAgaGFuZGxlRXJyb3IoKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuS4iuS8oOWksei0pSIpOwogICAgfSwKICAgIC8qKgogICAgICog5a+85Ye65pWw5o2uCiAgICAgKi8KICAgIC8vICBUT0RPIOWvvOWHuuaVsOaNrgogICAgZXhwb3J0RGF0YSgpIHsKICAgIH0sCiAgICAvKioKICAgICAqIOa4heepuuaWh+acrOaVsOaNrgogICAgICovCiAgICByZW1vdmVBbGwoKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruWumuimgeWIoOmZpOWQlz8iLCAi6K2m5ZGKIiwgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAi5Y+W5raIIiwKICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIHJlbW92ZUFsbEFubm90YXRlVGV4dEFwaSh0aGlzLnRva2VuKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlci9zZXRUYXNrTGlzdCIsIFtdKTsKICAgICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgICB0aGlzLmZpbHRlckxpc3QgPSBbXTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICog5pCc57Si5paH5pysCiAgICAgKi8KICAgIHNlYXJjaCgpIHsKICAgICAgbGV0IGtleXdvcmRzID0gdGhpcy5rZXl3b3Jkcy50cmltKCk7CgogICAgICBpZiAodGhpcy5zZWFyY2hUYXJnZXQgPT0gIuaPj+i/sCIpIHsKICAgICAgICB0aGlzLmZpbHRlckxpc3QgPSB0aGlzLmxpc3QuZmlsdGVyKChpdGVtKSA9PgogICAgICAgICAgaXRlbS5kZXNjcmlwdGlvbi5pbmNsdWRlcyhrZXl3b3JkcykKICAgICAgICApOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMubGlzdC5maWx0ZXIoKGl0ZW0pID0+CiAgICAgICAgICBpdGVtW3RoaXMuc2VhcmNoVGFyZ2V0XS5pbmNsdWRlcyhrZXl3b3JkcykKICAgICAgICApOwogICAgICB9CiAgICB9LAogICAgLyoqCiAgICAgKiDooajmoLzmoLflvI8KICAgICAqLwogICAgdGFibGVSb3dDbGFzc05hbWUoe3Jvdywgcm93SW5kZXh9KSB7CiAgICAgIHJvdzsKICAgICAgaWYgKHJvd0luZGV4ICUgMikgewogICAgICAgIHJldHVybiAiaGlnaGxpZ2h0LXJvdyI7CiAgICAgIH0KICAgICAgcmV0dXJuICIiOwogICAgfSwKICAgIC8qKgogICAgICog5YmN5b6A5qCH5rOo6aG16Z2iCiAgICAgKi8KICAgIHJlY2VpdmVUYXNrKGluZGV4KSB7CiAgICAgIHRoaXMuZmlsdGVyTGlzdFtpbmRleF0uc3RhdHVzID0gIuW3sumihuWPliI7CiAgICAgIHJlY2VpdmVUYXNrQXBpKHRoaXMuZmlsdGVyTGlzdFtpbmRleF0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YVsiZmxhZyJdKQogICAgICAgIGlmIChyZXNwb25zZS5kYXRhWyJmbGFnIl0pewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLpooblj5bmiJDlip8iKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8qKgogICAgICog57yW6L6RCiAgICAgKiBAcGFyYW0ge29iamVjdH0gcm93IOaTjeS9nOW9k+WJjeihjOaVsOaNrgogICAgICovCiAgICBoYW5kbGVFZGl0KGluZGV4LCByb3cpIHsKICAgICAgdGhpcy5zaG93RWRpdEZvcm0gPSB0cnVlOwogICAgICB0aGlzLmxpc3RFZGl0SW5kZXggPSBpbmRleDsKICAgICAgdGhpcy50YXNrZm9ybS5kZXNjcmlwdGlvbiA9IHJvdy5kZXNjcmlwdGlvbjsKICAgICAgdGhpcy50YXNrZm9ybS5uYW1lID0gcm93Lm5hbWU7CiAgICAgIHRoaXMuaGFuZGxlSXRlbUlkID0gcm93LmlkOwogICAgfSwKICAgIC8qKgogICAgICog5pu05paw5pWw5o2uCiAgICAgKi8KICAgIHVwZGF0ZSgpIHsKICAgICAgdGhpcy5maWx0ZXJMaXN0W3RoaXMubGlzdEVkaXRJbmRleF0uZGVzY3JpcHRpb24gPSB0aGlzLmZvcm0uZGVzY3JpcHRpb247CiAgICAgIHRoaXMuZmlsdGVyTGlzdFt0aGlzLmxpc3RFZGl0SW5kZXhdLnRleHQgPSB0aGlzLmZvcm0udGV4dDsKICAgICAgdXBkYXRlQW5ub3RhdGVUZXh0SW5mb0FwaSh0aGlzLmZpbHRlckxpc3RbdGhpcy5saXN0RWRpdEluZGV4XSk7CiAgICAgIHRoaXMubGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0uaWQgPT09IHRoaXMuaGFuZGxlSXRlbUlkKSB7CiAgICAgICAgICBpdGVtLmRlc2NyaXB0aW9uID0gdGhpcy5mb3JtLmRlc2NyaXB0aW9uOwogICAgICAgICAgaXRlbS50ZXh0ID0gdGhpcy5mb3JtLnRleHQ7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zaG93RWRpdEZvcm0gPSBmYWxzZTsKICAgIH0sCiAgICAvKioKICAgICAqIOWIoOmZpOaWh+acrAogICAgICovCiAgICBoYW5kbGVEZWxldGUoaW5kZXgpIHsKICAgICAgbGV0IGlkID0gdGhpcy5maWx0ZXJMaXN0W2luZGV4XS5pZDsKICAgICAgZGVsZXRlQW5ub3RhdGVUZXh0QXBpKGlkKTsKICAgICAgdGhpcy5maWx0ZXJMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMubGlzdFtpXS5pZCA9PSBpZCkgewogICAgICAgICAgdGhpcy5saXN0LnNwbGljZShpLCAxKTsKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCB0aGlzLmxpc3QpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICB9LAp9Owo="},null]}
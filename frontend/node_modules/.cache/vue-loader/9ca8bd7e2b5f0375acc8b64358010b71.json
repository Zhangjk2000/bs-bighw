{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\entityAnnotate\\components\\annotateContent\\AnnotateContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\entityAnnotate\\components\\annotateContent\\AnnotateContent.vue","mtime":1640402560159},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1639628022471},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
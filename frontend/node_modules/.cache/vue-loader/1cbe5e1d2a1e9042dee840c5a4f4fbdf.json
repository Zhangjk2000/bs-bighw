{"remainingRequest":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system\\frontend\\src\\views\\annotateTextList\\index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"F:\\BS\\annotate-system\\frontend\\src\\views\\annotateTextList\\index.vue","mtime":1639627257288},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639628020883},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1639628025719},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1639628021884},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1639628023152},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovLyDmjInpkq7nu4QNCi5idXR0b24tZ3JvdXAgew0KICB3aWR0aDogMTAwJTsNCiAgZGlzcGxheTogaW5saW5lOw0KICBtYXJnaW46IDAgMjBweCAyMHB4IDIwcHg7DQogICYtaXRlbSB7DQogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Ow0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgfQ0KfQ0KLy8g5riF56m65oyJ6ZKuDQouY2xlYXIgew0KICBmbG9hdDogcmlnaHQ7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQovLyDmkJzntKLmoYYNCi5zZWFyY2ggew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICAuZWwtc2VsZWN0IHsNCiAgICB3aWR0aDogMTUwcHg7DQogIH0NCn0NCi8vIOihqOagvOagt+W8jw0KLmVsLXRhYmxlIC5oaWdobGlnaHQtcm93IHsNCiAgYmFja2dyb3VuZDogI2ViZjBmYTsNCn0NCi8vIOWNleihjOaYvuekuuaWh+acrA0KLnNpbmdsZS1saW5lIHsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/annotateTextList","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 按钮组 -->\r\n    <div class=\"button-group\">\r\n      <div class=\"button-group-item\">\r\n        <el-upload\r\n          class=\"upload-demo\"\r\n          name=\"file\"\r\n          multiple\r\n          accept=\"text/plain\"\r\n          :headers=\"{ 'annotate-system-token': token }\"\r\n          action=\"http://localhost:8000/api/annotate_text/upload/\"\r\n          :on-success=\"handleSuccess\"\r\n          :on-error=\"handleError\"\r\n          :show-file-list=\"false\"\r\n        >\r\n          <el-button type=\"primary\">\r\n            导入数据\r\n          </el-button>\r\n        </el-upload>\r\n      </div>\r\n      <div class=\"button-group-item\">\r\n        <el-button type=\"primary\" @click=\"exportData\">\r\n          导出数据\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"clear\">\r\n      <el-button type=\"danger\" @click=\"removeAll\">\r\n        清空\r\n      </el-button>\r\n    </div>\r\n    <!-- 搜索框 -->\r\n    <div class=\"search\">\r\n      <el-input\r\n        v-model=\"keywords\"\r\n        placeholder=\"请搜索关键词\"\r\n        class=\"input-with-select\"\r\n        @input=\"search\"\r\n      >\r\n        <el-select slot=\"prepend\" v-model=\"searchTarget\">\r\n          <el-option label=\"描述\" value=\"description\"></el-option>\r\n          <el-option label=\"文本\" value=\"text\"></el-option>\r\n        </el-select>\r\n        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\" />\r\n      </el-input>\r\n    </div>\r\n    <div>\r\n      <p>注意:您需要在<strong>标注之前</strong>设置好标签,在标注未完成时添加标签会<strong>清空标注数据</strong></p>\r\n    </div>\r\n    <!-- 表格 -->\r\n    <div>\r\n      <el-table\r\n        v-loading=\"listLoading\"\r\n        :data=\"filterList\"\r\n        element-loading-text=\"Loading\"\r\n        :row-class-name=\"tableRowClassName\"\r\n        border\r\n        fit\r\n      >\r\n        <!-- 序号 -->\r\n        <el-table-column align=\"center\" label=\"序号\" width=\"50\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.$index + 1 }}\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 描述 -->\r\n        <el-table-column label=\"描述\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <p class=\"single-line\">\r\n              {{ scope.row.description }}\r\n            </p>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"文本\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <p class=\"single-line\">\r\n              {{ scope.row.text }}\r\n            </p>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 状态 -->\r\n        <el-table-column\r\n          class-name=\"status-col\"\r\n          label=\"状态\"\r\n          width=\"110\"\r\n          align=\"center\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"scope.row.status | statusFilter\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 操作 -->\r\n        <el-table-column label=\"操作\" width=\"210\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              @click=\"goToAnnotate(scope.$index)\"\r\n            >\r\n              标注\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"success\"\r\n              @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(scope.$index)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <!-- 编辑框 -->\r\n    <el-dialog :visible.sync=\"showEditForm\" :width=\"width\">\r\n      <el-form label-position=\"left\" label-width=\"80px\" :model=\"form\">\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"文本\">\r\n          <el-input\r\n            v-model=\"form.text\"\r\n            type=\"textarea\"\r\n            :autosize=\"{ minRows: 3, maxRows: 5 }\"\r\n            placeholder=\"请输入内容\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"update()\">\r\n          更新\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  deleteAnnotateTextApi,\r\n  updateAnnotateTextInfoApi,\r\n  removeAllAnnotateTextApi,\r\n} from \"@/api/annotateText\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"TableList\",\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        已标注: \"success\",\r\n        未标注: \"gray\",\r\n      };\r\n      return statusMap[status];\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      searchTarget: \"描述\", // 搜索对象\r\n\r\n      keywords: \"\", // 搜索关键词\r\n      filterList: [], //符合条件的数据\r\n      list: [], // 所有数据列表\r\n      listLoading: true, //加载效果\r\n      showEditForm: false, //编辑框的显隐\r\n      listEditIndex: 0, // 编辑索引\r\n      handleItemId: 0, // 操作条目的id\r\n      form: {\r\n        //编辑框数据\r\n        description: \"\",\r\n        text: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    // 编辑框宽度\r\n    width() {\r\n      return window.innerWidth <= 400 ? \"80%\" : \"30%\";\r\n    },\r\n    token() {\r\n      return getToken();\r\n    },\r\n    ...mapGetters([\"annotateTextList\"]),\r\n  },\r\n  mounted() {\r\n    this.list = this.filterList = this.annotateTextList;\r\n    this.listLoading = false;\r\n  },\r\n  methods: {\r\n    /**\r\n     * 上传成功的回调函数\r\n     * @param response 响应数据\r\n     */\r\n    handleSuccess(response) {\r\n      this.$message.success(\"上传成功\");\r\n      this.$store.dispatch(\"user/setAnnotateTextList\", response.data);\r\n\r\n      this.filterList = this.list = response.data;\r\n    },\r\n    /**\r\n     * 上传失败回调函数\r\n     */\r\n    handleError() {\r\n      this.$message.error(\"上传失败\");\r\n    },\r\n    /**\r\n     * 导出数据\r\n     */\r\n    //  TODO 导出数据\r\n    exportData() {},\r\n    /**\r\n     * 清空文本数据\r\n     */\r\n    removeAll() {\r\n      this.$confirm(\"确定要删除吗?\", \"警告\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        removeAllAnnotateTextApi(this.token);\r\n        this.$store.dispatch(\"user/setAnnotateTextList\", []);\r\n        this.list = [];\r\n        this.filterList = [];\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 搜索文本\r\n     */\r\n    search() {\r\n      let keywords = this.keywords.trim();\r\n\r\n      if (this.searchTarget == \"描述\") {\r\n        this.filterList = this.list.filter((item) =>\r\n          item.description.includes(keywords)\r\n        );\r\n      } else {\r\n        this.filterList = this.list.filter((item) =>\r\n          item[this.searchTarget].includes(keywords)\r\n        );\r\n      }\r\n    },\r\n    /**\r\n     * 表格样式\r\n     */\r\n    tableRowClassName({ row, rowIndex }) {\r\n      row;\r\n      if (rowIndex % 2) {\r\n        return \"highlight-row\";\r\n      }\r\n      return \"\";\r\n    },\r\n    /**\r\n     * 前往标注页面\r\n     */\r\n    goToAnnotate(index) {\r\n      // 设置标注文本\r\n      this.$store.dispatch(\r\n        \"annotate/setAnnotateText\",\r\n        this.filterList[index].text\r\n      );\r\n      this.$router.push(\"/entityAnnotate\");\r\n    },\r\n    /**\r\n     * 编辑\r\n     * @param {object} row 操作当前行数据\r\n     */\r\n    handleEdit(index, row) {\r\n      this.showEditForm = true;\r\n      this.listEditIndex = index;\r\n      this.form.description = row.description;\r\n      this.form.text = row.text;\r\n      this.handleItemId = row.id;\r\n    },\r\n    /**\r\n     * 更新数据\r\n     */\r\n    update() {\r\n      this.filterList[this.listEditIndex].description = this.form.description;\r\n      this.filterList[this.listEditIndex].text = this.form.text;\r\n      updateAnnotateTextInfoApi(this.filterList[this.listEditIndex]);\r\n      this.list.forEach((item) => {\r\n        if (item.id === this.handleItemId) {\r\n          item.description = this.form.description;\r\n          item.text = this.form.text;\r\n        }\r\n      });\r\n      this.showEditForm = false;\r\n    },\r\n    /**\r\n     * 删除文本\r\n     */\r\n    handleDelete(index) {\r\n      let id = this.filterList[index].id;\r\n      deleteAnnotateTextApi(id);\r\n      this.filterList.splice(index, 1);\r\n      for (let i = 0; i < this.list.length; i++) {\r\n        if (this.list[i].id == id) {\r\n          this.list.splice(i, 1);\r\n          this.$store.dispatch(\"user/setAnnotateTextList\", this.list);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n// 按钮组\r\n.button-group {\r\n  width: 100%;\r\n  display: inline;\r\n  margin: 0 20px 20px 20px;\r\n  &-item {\r\n    margin-right: 20px;\r\n    display: inline-block;\r\n  }\r\n}\r\n// 清空按钮\r\n.clear {\r\n  float: right;\r\n  margin-bottom: 20px;\r\n}\r\n// 搜索框\r\n.search {\r\n  margin-bottom: 20px;\r\n  .el-select {\r\n    width: 150px;\r\n  }\r\n}\r\n// 表格样式\r\n.el-table .highlight-row {\r\n  background: #ebf0fa;\r\n}\r\n// 单行显示文本\r\n.single-line {\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"]}]}
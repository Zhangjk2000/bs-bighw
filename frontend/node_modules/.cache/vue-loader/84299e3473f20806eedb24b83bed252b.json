{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\videoCut\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\videoCut\\index.vue","mtime":1640092901650},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1639628022471},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZGVsZXRlQW5ub3RhdGVUZXh0QXBpLAogIHVwZGF0ZUFubm90YXRlVGV4dEluZm9BcGksCiAgcmVtb3ZlQWxsQW5ub3RhdGVUZXh0QXBpLAp9IGZyb20gIkAvYXBpL2Fubm90YXRlVGV4dCI7CmltcG9ydCB7Z2V0VG9rZW59IGZyb20gIkAvdXRpbHMvYXV0aCI7CmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInZpZGVvQ3V0IiwKICBmaWx0ZXJzOiB7CiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7CiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsKICAgICAgICDlt7LmoIfms6g6ICJzdWNjZXNzIiwKICAgICAgICDmnKrmoIfms6g6ICJncmF5IiwKICAgICAgfTsKICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdOwogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoVGFyZ2V0OiAi5o+P6L+wIiwgLy8g5pCc57Si5a+56LGhCiAgICAgIHZpZGVvU3JjOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvdGVzdF8xLm1wNCIpLAogICAgICBpbWdTcmM6IFtdLAogICAgICBrZXl3b3JkczogIiIsIC8vIOaQnOe0ouWFs+mUruivjQogICAgICBmaWx0ZXJMaXN0OiBbXSwgLy/nrKblkIjmnaHku7bnmoTmlbDmja4KICAgICAgbGlzdDogW10sIC8vIOaJgOacieaVsOaNruWIl+ihqAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwgLy/liqDovb3mlYjmnpwKICAgICAgc2hvd0VkaXRGb3JtOiBmYWxzZSwgLy/nvJbovpHmoYbnmoTmmL7pmpAKICAgICAgbGlzdEVkaXRJbmRleDogMCwgLy8g57yW6L6R57Si5byVCiAgICAgIGhhbmRsZUl0ZW1JZDogMCwgLy8g5pON5L2c5p2h55uu55qEaWQKICAgICAgZm9ybTogewogICAgICAgIC8v57yW6L6R5qGG5pWw5o2uCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRleHQ6ICIiLAogICAgICB9LAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDnvJbovpHmoYblrr3luqYKICAgIHdpZHRoKCkgewogICAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGggPD0gNDAwID8gIjgwJSIgOiAiMzAlIjsKICAgIH0sCiAgICB0b2tlbigpIHsKICAgICAgcmV0dXJuIGdldFRva2VuKCk7CiAgICB9LAogICAgLi4ubWFwR2V0dGVycyhbImFubm90YXRlVGV4dExpc3QiXSksCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5saXN0ID0gdGhpcy5maWx0ZXJMaXN0ID0gdGhpcy5hbm5vdGF0ZVRleHRMaXN0OwogICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogIH0sCiAgbWV0aG9kczogewoKICAgIGN1dFBpY3R1cmUoKSB7CiAgICAgIHZhciB2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigidmlkZW8iKTsKICAgICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUNhbnZhcycpCiAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKICAgICAgY3R4LmRyYXdJbWFnZSh2LCAwLCAwLCAzNDMsIDIwMCk7CiAgICAgIHZhciBvR3JheUltZyA9IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnKTsKICAgICAgdGhpcy5pbWdTcmMucHVzaChvR3JheUltZykKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImFubm90YXRlL3NldFZpZGVvSW1ncyIsIHRoaXMuaW1nU3JjKTsKICAgIH0sCgogICAgb25CZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICBjb25zdCBpc0lNQUdFID0gZmlsZS50eXBlID09PSAnaW1hZ2UvanBlZycgfHwgJ2ltYWdlL2dpZicgfHwgJ2ltYWdlL3BuZycgfHwgJ3ZpZGVvL21wNCcgfHwgJ3ZpZGVvL2F2aScgfHwgJ3ZpZGVvL3JtdmInOwoKICAgICAgaWYgKCFpc0lNQUdFKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5LiK5Lyg5paH5Lu25Y+q6IO95piv5Zu+54mH5oiW6ICF6KeG6aKR5qC85byPIScpOwogICAgICB9CiAgICAgIHJldHVybiBpc0lNQUdFOwogICAgfSwKICAgIC8qKgogICAgICog5LiK5Lyg5oiQ5Yqf55qE5Zue6LCD5Ye95pWwCiAgICAgKiBAcGFyYW0gcmVzcG9uc2Ug5ZON5bqU5pWw5o2uCiAgICAgKi8KICAgIGhhbmRsZVN1Y2Nlc3MocmVzcG9uc2UpIHsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLkuIrkvKDmiJDlip8iKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInVzZXIvc2V0QW5ub3RhdGVUZXh0TGlzdCIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgdGhpcy5maWx0ZXJMaXN0ID0gdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YTsKICAgIH0sCiAgICAvKioKICAgICAqIOS4iuS8oOWksei0peWbnuiwg+WHveaVsAogICAgICovCiAgICBoYW5kbGVFcnJvcigpIHsKICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5LiK5Lyg5aSx6LSlIik7CiAgICB9LAogICAgLyoqCiAgICAgKiDlr7zlh7rmlbDmja4KICAgICAqLwogICAgLy8gIFRPRE8g5a+85Ye65pWw5o2uCiAgICBleHBvcnREYXRhKCkgewogICAgfSwKICAgIC8qKgogICAgICog5riF56m65paH5pys5pWw5o2uCiAgICAgKi8KICAgIHJlbW92ZUFsbCgpIHsKICAgICAgdGhpcy4kY29uZmlybSgi56Gu5a6a6KaB5Yig6Zmk5ZCXPyIsICLorablkYoiLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa7lrpoiLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICLlj5bmtogiLAogICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgcmVtb3ZlQWxsQW5ub3RhdGVUZXh0QXBpKHRoaXMudG9rZW4pOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCBbXSk7CiAgICAgICAgdGhpcy5saXN0ID0gW107CiAgICAgICAgdGhpcy5maWx0ZXJMaXN0ID0gW107CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIOaQnOe0ouaWh+acrAogICAgICovCiAgICBzZWFyY2goKSB7CiAgICAgIGxldCBrZXl3b3JkcyA9IHRoaXMua2V5d29yZHMudHJpbSgpOwoKICAgICAgaWYgKHRoaXMuc2VhcmNoVGFyZ2V0ID09ICLmj4/ov7AiKSB7CiAgICAgICAgdGhpcy5maWx0ZXJMaXN0ID0gdGhpcy5saXN0LmZpbHRlcigoaXRlbSkgPT4KICAgICAgICAgIGl0ZW0uZGVzY3JpcHRpb24uaW5jbHVkZXMoa2V5d29yZHMpCiAgICAgICAgKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmZpbHRlckxpc3QgPSB0aGlzLmxpc3QuZmlsdGVyKChpdGVtKSA9PgogICAgICAgICAgaXRlbVt0aGlzLnNlYXJjaFRhcmdldF0uaW5jbHVkZXMoa2V5d29yZHMpCiAgICAgICAgKTsKICAgICAgfQogICAgfSwKICAgIC8qKgogICAgICog6KGo5qC85qC35byPCiAgICAgKi8KICAgIHRhYmxlUm93Q2xhc3NOYW1lKHtyb3csIHJvd0luZGV4fSkgewogICAgICByb3c7CiAgICAgIGlmIChyb3dJbmRleCAlIDIpIHsKICAgICAgICByZXR1cm4gImhpZ2hsaWdodC1yb3ciOwogICAgICB9CiAgICAgIHJldHVybiAiIjsKICAgIH0sCiAgICAvKioKICAgICAqIOWJjeW+gOagh+azqOmhtemdogogICAgICovCiAgICBnb1RvQW5ub3RhdGUoaW5kZXgpIHsKICAgICAgLy8g6K6+572u5qCH5rOo5paH5pysCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKAogICAgICAgICJhbm5vdGF0ZS9zZXRBbm5vdGF0ZVRleHQiLAogICAgICAgIHRoaXMuZmlsdGVyTGlzdFtpbmRleF0udGV4dAogICAgICApOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2VudGl0eUFubm90YXRlIik7CiAgICB9LAogICAgLyoqCiAgICAgKiDnvJbovpEKICAgICAqIEBwYXJhbSB7b2JqZWN0fSByb3cg5pON5L2c5b2T5YmN6KGM5pWw5o2uCiAgICAgKi8KICAgIGhhbmRsZUVkaXQoaW5kZXgsIHJvdykgewogICAgICB0aGlzLnNob3dFZGl0Rm9ybSA9IHRydWU7CiAgICAgIHRoaXMubGlzdEVkaXRJbmRleCA9IGluZGV4OwogICAgICB0aGlzLmZvcm0uZGVzY3JpcHRpb24gPSByb3cuZGVzY3JpcHRpb247CiAgICAgIHRoaXMuZm9ybS50ZXh0ID0gcm93LnRleHQ7CiAgICAgIHRoaXMuaGFuZGxlSXRlbUlkID0gcm93LmlkOwogICAgfSwKICAgIC8qKgogICAgICog5pu05paw5pWw5o2uCiAgICAgKi8KICAgIHVwZGF0ZSgpIHsKICAgICAgdGhpcy5maWx0ZXJMaXN0W3RoaXMubGlzdEVkaXRJbmRleF0uZGVzY3JpcHRpb24gPSB0aGlzLmZvcm0uZGVzY3JpcHRpb247CiAgICAgIHRoaXMuZmlsdGVyTGlzdFt0aGlzLmxpc3RFZGl0SW5kZXhdLnRleHQgPSB0aGlzLmZvcm0udGV4dDsKICAgICAgdXBkYXRlQW5ub3RhdGVUZXh0SW5mb0FwaSh0aGlzLmZpbHRlckxpc3RbdGhpcy5saXN0RWRpdEluZGV4XSk7CiAgICAgIHRoaXMubGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0uaWQgPT09IHRoaXMuaGFuZGxlSXRlbUlkKSB7CiAgICAgICAgICBpdGVtLmRlc2NyaXB0aW9uID0gdGhpcy5mb3JtLmRlc2NyaXB0aW9uOwogICAgICAgICAgaXRlbS50ZXh0ID0gdGhpcy5mb3JtLnRleHQ7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zaG93RWRpdEZvcm0gPSBmYWxzZTsKICAgIH0sCiAgICAvKioKICAgICAqIOWIoOmZpOaWh+acrAogICAgICovCiAgICBoYW5kbGVEZWxldGUoaW5kZXgpIHsKICAgICAgbGV0IGlkID0gdGhpcy5maWx0ZXJMaXN0W2luZGV4XS5pZDsKICAgICAgZGVsZXRlQW5ub3RhdGVUZXh0QXBpKGlkKTsKICAgICAgdGhpcy5maWx0ZXJMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMubGlzdFtpXS5pZCA9PSBpZCkgewogICAgICAgICAgdGhpcy5saXN0LnNwbGljZShpLCAxKTsKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCB0aGlzLmxpc3QpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICB9LAp9Owo="},null]}
{"remainingRequest":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\index.vue?vue&type=style&index=0&id=f817ac1e&scoped=true&lang=css&","dependencies":[{"path":"F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\index.vue","mtime":1639627257309},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639628020883},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1639628025719},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1639628021884},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGFncy1jb250YWluZXIgew0KICBtYXJnaW4tbGVmdDogMzBweDsNCn0NCg0KLnRleHQtdGFnIHsNCiAgbWFyZ2luOiAxMHB4IDEwcHggMTBweCAwOw0KICBwYWRkaW5nOiAzcHggMTBweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGJvcmRlci1yYWRpdXM6IDE1cHg7DQp9DQoNCi5lbnRpdHktaXRlbS1ib3ggew0KICBtYXJnaW46IDAgMCAxMDBweCAzMHB4Ow0KfQ0KDQoucGFnZSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICBtYXJnaW4tYm90dG9tOiAxMDBweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/errorAnalysis/textAnalysis","sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"textArray.length\">\r\n      <div>\r\n        <div style=\"margin: 30px;\">\r\n          <ul>\r\n            <li>字上面的标签表示标注值，下方为预测值</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"tags-container\">\r\n        <span\r\n          v-for=\"(type, index) in types\"\r\n          :key=\"index\"\r\n          class=\"text-tag\"\r\n          :style=\"{ backgroundColor: type.color }\"\r\n        >\r\n          {{ type.text }}\r\n        </span>\r\n      </div>\r\n      <div\r\n        v-for=\"(text, index) in textArray\"\r\n        :key=\"index\"\r\n        class=\"entity-item-box\"\r\n      >\r\n        <entity-item-box\r\n          :tags=\"types\"\r\n          :entities=\"\r\n            annotationArray[currentPage * sentenceCount + index - sentenceCount]\r\n          \"\r\n        />\r\n      </div>\r\n      <div class=\"page\">\r\n        <div class=\"block\">\r\n          <el-pagination\r\n            :current-page.sync=\"currentPage\"\r\n            :page-sizes=\"[1, 2, 3, 4]\"\r\n            :page-size=\"2\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"annotationArray.length\"\r\n            @size-change=\"handleSizeChange\"\r\n          >\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Empty v-else />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EntityItemBox from \"../textAnalysis/components/EntityItemBox\";\r\nimport Empty from \"../empty/Empty\";\r\n\r\nexport default {\r\n  name: \"Index\",\r\n  components: {\r\n    EntityItemBox,\r\n    Empty,\r\n  },\r\n  data() {\r\n    return {\r\n      currentPage: 1, //当前页\r\n      annotationArray: [], //每个字的信息\r\n      types: [], //分类\r\n      sentenceCount: 2, //每页显示句子数\r\n    };\r\n  },\r\n  computed: {\r\n    /**\r\n     * 每页显示的文本\r\n     */\r\n    textArray() {\r\n      let n = this.currentPage;\r\n      let result = [];\r\n      for (\r\n        let i = this.sentenceCount * n - this.sentenceCount;\r\n        i <= this.sentenceCount * n - 1;\r\n        i++\r\n      ) {\r\n        if (this.annotationArray[i]) {\r\n          result.push([]);\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 处理每页显示的句子数\r\n     */\r\n    handleSizeChange(val) {\r\n      this.sentenceCount = val;\r\n    },\r\n    /**\r\n     * 获取数据\r\n     */\r\n    fetchData() {\r\n      let temp = this.$store.state.errorAnalysis.entity_type;\r\n      for (let i = 0; i < temp.length; i++) {\r\n        this.types.push({\r\n          text: temp[i],\r\n          color: this.$store.state.errorAnalysis.colorArray[i],\r\n        });\r\n      }\r\n      this.annotationArray = this.$store.state.errorAnalysis.sentences;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tags-container {\r\n  margin-left: 30px;\r\n}\r\n\r\n.text-tag {\r\n  margin: 10px 10px 10px 0;\r\n  padding: 3px 10px;\r\n  text-align: center;\r\n  display: inline-block;\r\n  border-radius: 15px;\r\n}\r\n\r\n.entity-item-box {\r\n  margin: 0 0 100px 30px;\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 100px;\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\entityAnnotate\\components\\annotateContent\\AnnotateContent.vue?vue&type=template&id=77b76808&scoped=true&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\entityAnnotate\\components\\annotateContent\\AnnotateContent.vue","mtime":1639627257292},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1639628026734},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
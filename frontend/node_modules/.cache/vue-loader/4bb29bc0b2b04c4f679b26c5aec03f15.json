{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\imgAnnotate\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\imgAnnotate\\index.vue","mtime":1639919792703},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1639628022471},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZGVsZXRlQW5ub3RhdGVUZXh0QXBpLAogIHVwZGF0ZUFubm90YXRlVGV4dEluZm9BcGksCiAgcmVtb3ZlQWxsQW5ub3RhdGVUZXh0QXBpLAp9IGZyb20gIkAvYXBpL2Fubm90YXRlVGV4dCI7CmltcG9ydCB7Z2V0VG9rZW59IGZyb20gIkAvdXRpbHMvYXV0aCI7CmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAidnVleCI7CmltcG9ydCB7QUlNYXJrZXJ9IGZyb20gJ3Z1ZS1waWN0dXJlLWJkLW1hcmtlcic7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImltZ0Fubm90YXRlIiwKICBmaWx0ZXJzOiB7CiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7CiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsKICAgICAgICDlt7LmoIfms6g6ICJzdWNjZXNzIiwKICAgICAgICDmnKrmoIfms6g6ICJncmF5IiwKICAgICAgfTsKICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdOwogICAgfSwKICB9LAogIGNvbXBvbmVudHM6IHsndWktbWFya2VyJzogQUlNYXJrZXJ9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hUYXJnZXQ6ICLmj4/ov7AiLCAvLyDmkJzntKLlr7nosaEKICAgICAgdXVpZDogJzBkYTkxMzAnLAogICAgICByZWFkT25seTpmYWxzZSwKICAgICAgY3VycmVudEltYWdlOiAiZnJvbnRlbmQvYXNzZXRzL2xvZ2luLnBuZyIsCiAgICAgIGtleXdvcmRzOiAiIiwgLy8g5pCc57Si5YWz6ZSu6K+NCiAgICAgIGZpbHRlckxpc3Q6IFtdLCAvL+espuWQiOadoeS7tueahOaVsOaNrgogICAgICBsaXN0OiBbXSwgLy8g5omA5pyJ5pWw5o2u5YiX6KGoCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLCAvL+WKoOi9veaViOaenAogICAgICBzaG93RWRpdEZvcm06IGZhbHNlLCAvL+e8lui+keahhueahOaYvumakAogICAgICBsaXN0RWRpdEluZGV4OiAwLCAvLyDnvJbovpHntKLlvJUKICAgICAgaGFuZGxlSXRlbUlkOiAwLCAvLyDmk43kvZzmnaHnm67nmoRpZAogICAgICBmb3JtOiB7CiAgICAgICAgLy/nvJbovpHmoYbmlbDmja4KICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGV4dDogIiIsCiAgICAgIH0sCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOe8lui+keahhuWuveW6pgogICAgd2lkdGgoKSB7CiAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aCA8PSA0MDAgPyAiODAlIiA6ICIzMCUiOwogICAgfSwKICAgIHRva2VuKCkgewogICAgICByZXR1cm4gZ2V0VG9rZW4oKTsKICAgIH0sCiAgICAuLi5tYXBHZXR0ZXJzKFsiYW5ub3RhdGVUZXh0TGlzdCJdKSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxpc3QgPSB0aGlzLmZpbHRlckxpc3QgPSB0aGlzLmFubm90YXRlVGV4dExpc3Q7CiAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIOS4iuS8oOaIkOWKn+eahOWbnuiwg+WHveaVsAogICAgICogQHBhcmFtIHJlc3BvbnNlIOWTjeW6lOaVsOaNrgogICAgICovCiAgICBoYW5kbGVTdWNjZXNzKHJlc3BvbnNlKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5LiK5Lyg5oiQ5YqfIik7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCByZXNwb25zZS5kYXRhKTsKCiAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGE7CiAgICB9LAogICAgLyoqCiAgICAgKiDkuIrkvKDlpLHotKXlm57osIPlh73mlbAKICAgICAqLwogICAgaGFuZGxlRXJyb3IoKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuS4iuS8oOWksei0pSIpOwogICAgfSwKICAgIC8qKgogICAgICog5a+85Ye65pWw5o2uCiAgICAgKi8KICAgIC8vICBUT0RPIOWvvOWHuuaVsOaNrgogICAgZXhwb3J0RGF0YSgpIHsKICAgIH0sCiAgICAvKioKICAgICAqIOa4heepuuaWh+acrOaVsOaNrgogICAgICovCiAgICByZW1vdmVBbGwoKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruWumuimgeWIoOmZpOWQlz8iLCAi6K2m5ZGKIiwgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAi5Y+W5raIIiwKICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIHJlbW92ZUFsbEFubm90YXRlVGV4dEFwaSh0aGlzLnRva2VuKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlci9zZXRBbm5vdGF0ZVRleHRMaXN0IiwgW10pOwogICAgICAgIHRoaXMubGlzdCA9IFtdOwogICAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IFtdOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDmkJzntKLmlofmnKwKICAgICAqLwogICAgc2VhcmNoKCkgewogICAgICBsZXQga2V5d29yZHMgPSB0aGlzLmtleXdvcmRzLnRyaW0oKTsKCiAgICAgIGlmICh0aGlzLnNlYXJjaFRhcmdldCA9PSAi5o+P6L+wIikgewogICAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMubGlzdC5maWx0ZXIoKGl0ZW0pID0+CiAgICAgICAgICBpdGVtLmRlc2NyaXB0aW9uLmluY2x1ZGVzKGtleXdvcmRzKQogICAgICAgICk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5maWx0ZXJMaXN0ID0gdGhpcy5saXN0LmZpbHRlcigoaXRlbSkgPT4KICAgICAgICAgIGl0ZW1bdGhpcy5zZWFyY2hUYXJnZXRdLmluY2x1ZGVzKGtleXdvcmRzKQogICAgICAgICk7CiAgICAgIH0KICAgIH0sCiAgICAvKioKICAgICAqIOihqOagvOagt+W8jwogICAgICovCiAgICB0YWJsZVJvd0NsYXNzTmFtZSh7cm93LCByb3dJbmRleH0pIHsKICAgICAgcm93OwogICAgICBpZiAocm93SW5kZXggJSAyKSB7CiAgICAgICAgcmV0dXJuICJoaWdobGlnaHQtcm93IjsKICAgICAgfQogICAgICByZXR1cm4gIiI7CiAgICB9LAogICAgLyoqCiAgICAgKiDliY3lvoDmoIfms6jpobXpnaIKICAgICAqLwogICAgZ29Ub0Fubm90YXRlKGluZGV4KSB7CiAgICAgIC8vIOiuvue9ruagh+azqOaWh+acrAogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgKICAgICAgICAiYW5ub3RhdGUvc2V0QW5ub3RhdGVUZXh0IiwKICAgICAgICB0aGlzLmZpbHRlckxpc3RbaW5kZXhdLnRleHQKICAgICAgKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9lbnRpdHlBbm5vdGF0ZSIpOwogICAgfSwKICAgIC8qKgogICAgICog57yW6L6RCiAgICAgKiBAcGFyYW0ge29iamVjdH0gcm93IOaTjeS9nOW9k+WJjeihjOaVsOaNrgogICAgICovCiAgICBoYW5kbGVFZGl0KGluZGV4LCByb3cpIHsKICAgICAgdGhpcy5zaG93RWRpdEZvcm0gPSB0cnVlOwogICAgICB0aGlzLmxpc3RFZGl0SW5kZXggPSBpbmRleDsKICAgICAgdGhpcy5mb3JtLmRlc2NyaXB0aW9uID0gcm93LmRlc2NyaXB0aW9uOwogICAgICB0aGlzLmZvcm0udGV4dCA9IHJvdy50ZXh0OwogICAgICB0aGlzLmhhbmRsZUl0ZW1JZCA9IHJvdy5pZDsKICAgIH0sCiAgICAvKioKICAgICAqIOabtOaWsOaVsOaNrgogICAgICovCiAgICB1cGRhdGUoKSB7CiAgICAgIHRoaXMuZmlsdGVyTGlzdFt0aGlzLmxpc3RFZGl0SW5kZXhdLmRlc2NyaXB0aW9uID0gdGhpcy5mb3JtLmRlc2NyaXB0aW9uOwogICAgICB0aGlzLmZpbHRlckxpc3RbdGhpcy5saXN0RWRpdEluZGV4XS50ZXh0ID0gdGhpcy5mb3JtLnRleHQ7CiAgICAgIHVwZGF0ZUFubm90YXRlVGV4dEluZm9BcGkodGhpcy5maWx0ZXJMaXN0W3RoaXMubGlzdEVkaXRJbmRleF0pOwogICAgICB0aGlzLmxpc3QuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIGlmIChpdGVtLmlkID09PSB0aGlzLmhhbmRsZUl0ZW1JZCkgewogICAgICAgICAgaXRlbS5kZXNjcmlwdGlvbiA9IHRoaXMuZm9ybS5kZXNjcmlwdGlvbjsKICAgICAgICAgIGl0ZW0udGV4dCA9IHRoaXMuZm9ybS50ZXh0OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuc2hvd0VkaXRGb3JtID0gZmFsc2U7CiAgICB9LAogICAgLyoqCiAgICAgKiDliKDpmaTmlofmnKwKICAgICAqLwogICAgaGFuZGxlRGVsZXRlKGluZGV4KSB7CiAgICAgIGxldCBpZCA9IHRoaXMuZmlsdGVyTGlzdFtpbmRleF0uaWQ7CiAgICAgIGRlbGV0ZUFubm90YXRlVGV4dEFwaShpZCk7CiAgICAgIHRoaXMuZmlsdGVyTGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICh0aGlzLmxpc3RbaV0uaWQgPT0gaWQpIHsKICAgICAgICAgIHRoaXMubGlzdC5zcGxpY2UoaSwgMSk7CiAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlci9zZXRBbm5vdGF0ZVRleHRMaXN0IiwgdGhpcy5saXN0KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},null]}
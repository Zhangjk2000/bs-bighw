{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\annotateTextList\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\annotateTextList\\index.vue","mtime":1639627257288},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICBkZWxldGVBbm5vdGF0ZVRleHRBcGksDQogIHVwZGF0ZUFubm90YXRlVGV4dEluZm9BcGksDQogIHJlbW92ZUFsbEFubm90YXRlVGV4dEFwaSwNCn0gZnJvbSAiQC9hcGkvYW5ub3RhdGVUZXh0IjsNCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAiQC91dGlscy9hdXRoIjsNCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiVGFibGVMaXN0IiwNCiAgZmlsdGVyczogew0KICAgIHN0YXR1c0ZpbHRlcihzdGF0dXMpIHsNCiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsNCiAgICAgICAg5bey5qCH5rOoOiAic3VjY2VzcyIsDQogICAgICAgIOacquagh+azqDogImdyYXkiLA0KICAgICAgfTsNCiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXTsNCiAgICB9LA0KICB9LA0KDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHNlYXJjaFRhcmdldDogIuaPj+i/sCIsIC8vIOaQnOe0ouWvueixoQ0KDQogICAgICBrZXl3b3JkczogIiIsIC8vIOaQnOe0ouWFs+mUruivjQ0KICAgICAgZmlsdGVyTGlzdDogW10sIC8v56ym5ZCI5p2h5Lu255qE5pWw5o2uDQogICAgICBsaXN0OiBbXSwgLy8g5omA5pyJ5pWw5o2u5YiX6KGoDQogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwgLy/liqDovb3mlYjmnpwNCiAgICAgIHNob3dFZGl0Rm9ybTogZmFsc2UsIC8v57yW6L6R5qGG55qE5pi+6ZqQDQogICAgICBsaXN0RWRpdEluZGV4OiAwLCAvLyDnvJbovpHntKLlvJUNCiAgICAgIGhhbmRsZUl0ZW1JZDogMCwgLy8g5pON5L2c5p2h55uu55qEaWQNCiAgICAgIGZvcm06IHsNCiAgICAgICAgLy/nvJbovpHmoYbmlbDmja4NCiAgICAgICAgZGVzY3JpcHRpb246ICIiLA0KICAgICAgICB0ZXh0OiAiIiwNCiAgICAgIH0sDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAvLyDnvJbovpHmoYblrr3luqYNCiAgICB3aWR0aCgpIHsNCiAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aCA8PSA0MDAgPyAiODAlIiA6ICIzMCUiOw0KICAgIH0sDQogICAgdG9rZW4oKSB7DQogICAgICByZXR1cm4gZ2V0VG9rZW4oKTsNCiAgICB9LA0KICAgIC4uLm1hcEdldHRlcnMoWyJhbm5vdGF0ZVRleHRMaXN0Il0pLA0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMubGlzdCA9IHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMuYW5ub3RhdGVUZXh0TGlzdDsNCiAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvKioNCiAgICAgKiDkuIrkvKDmiJDlip/nmoTlm57osIPlh73mlbANCiAgICAgKiBAcGFyYW0gcmVzcG9uc2Ug5ZON5bqU5pWw5o2uDQogICAgICovDQogICAgaGFuZGxlU3VjY2VzcyhyZXNwb25zZSkgew0KICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLkuIrkvKDmiJDlip8iKTsNCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCByZXNwb25zZS5kYXRhKTsNCg0KICAgICAgdGhpcy5maWx0ZXJMaXN0ID0gdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YTsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqIOS4iuS8oOWksei0peWbnuiwg+WHveaVsA0KICAgICAqLw0KICAgIGhhbmRsZUVycm9yKCkgew0KICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5LiK5Lyg5aSx6LSlIik7DQogICAgfSwNCiAgICAvKioNCiAgICAgKiDlr7zlh7rmlbDmja4NCiAgICAgKi8NCiAgICAvLyAgVE9ETyDlr7zlh7rmlbDmja4NCiAgICBleHBvcnREYXRhKCkge30sDQogICAgLyoqDQogICAgICog5riF56m65paH5pys5pWw5o2uDQogICAgICovDQogICAgcmVtb3ZlQWxsKCkgew0KICAgICAgdGhpcy4kY29uZmlybSgi56Gu5a6a6KaB5Yig6Zmk5ZCXPyIsICLorablkYoiLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsDQogICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwNCiAgICAgIH0pLnRoZW4oKCkgPT4gew0KICAgICAgICByZW1vdmVBbGxBbm5vdGF0ZVRleHRBcGkodGhpcy50b2tlbik7DQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCBbXSk7DQogICAgICAgIHRoaXMubGlzdCA9IFtdOw0KICAgICAgICB0aGlzLmZpbHRlckxpc3QgPSBbXTsNCiAgICAgIH0pOw0KICAgIH0sDQoNCiAgICAvKioNCiAgICAgKiDmkJzntKLmlofmnKwNCiAgICAgKi8NCiAgICBzZWFyY2goKSB7DQogICAgICBsZXQga2V5d29yZHMgPSB0aGlzLmtleXdvcmRzLnRyaW0oKTsNCg0KICAgICAgaWYgKHRoaXMuc2VhcmNoVGFyZ2V0ID09ICLmj4/ov7AiKSB7DQogICAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMubGlzdC5maWx0ZXIoKGl0ZW0pID0+DQogICAgICAgICAgaXRlbS5kZXNjcmlwdGlvbi5pbmNsdWRlcyhrZXl3b3JkcykNCiAgICAgICAgKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuZmlsdGVyTGlzdCA9IHRoaXMubGlzdC5maWx0ZXIoKGl0ZW0pID0+DQogICAgICAgICAgaXRlbVt0aGlzLnNlYXJjaFRhcmdldF0uaW5jbHVkZXMoa2V5d29yZHMpDQogICAgICAgICk7DQogICAgICB9DQogICAgfSwNCiAgICAvKioNCiAgICAgKiDooajmoLzmoLflvI8NCiAgICAgKi8NCiAgICB0YWJsZVJvd0NsYXNzTmFtZSh7IHJvdywgcm93SW5kZXggfSkgew0KICAgICAgcm93Ow0KICAgICAgaWYgKHJvd0luZGV4ICUgMikgew0KICAgICAgICByZXR1cm4gImhpZ2hsaWdodC1yb3ciOw0KICAgICAgfQ0KICAgICAgcmV0dXJuICIiOw0KICAgIH0sDQogICAgLyoqDQogICAgICog5YmN5b6A5qCH5rOo6aG16Z2iDQogICAgICovDQogICAgZ29Ub0Fubm90YXRlKGluZGV4KSB7DQogICAgICAvLyDorr7nva7moIfms6jmlofmnKwNCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKA0KICAgICAgICAiYW5ub3RhdGUvc2V0QW5ub3RhdGVUZXh0IiwNCiAgICAgICAgdGhpcy5maWx0ZXJMaXN0W2luZGV4XS50ZXh0DQogICAgICApOw0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9lbnRpdHlBbm5vdGF0ZSIpOw0KICAgIH0sDQogICAgLyoqDQogICAgICog57yW6L6RDQogICAgICogQHBhcmFtIHtvYmplY3R9IHJvdyDmk43kvZzlvZPliY3ooYzmlbDmja4NCiAgICAgKi8NCiAgICBoYW5kbGVFZGl0KGluZGV4LCByb3cpIHsNCiAgICAgIHRoaXMuc2hvd0VkaXRGb3JtID0gdHJ1ZTsNCiAgICAgIHRoaXMubGlzdEVkaXRJbmRleCA9IGluZGV4Ow0KICAgICAgdGhpcy5mb3JtLmRlc2NyaXB0aW9uID0gcm93LmRlc2NyaXB0aW9uOw0KICAgICAgdGhpcy5mb3JtLnRleHQgPSByb3cudGV4dDsNCiAgICAgIHRoaXMuaGFuZGxlSXRlbUlkID0gcm93LmlkOw0KICAgIH0sDQogICAgLyoqDQogICAgICog5pu05paw5pWw5o2uDQogICAgICovDQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy5maWx0ZXJMaXN0W3RoaXMubGlzdEVkaXRJbmRleF0uZGVzY3JpcHRpb24gPSB0aGlzLmZvcm0uZGVzY3JpcHRpb247DQogICAgICB0aGlzLmZpbHRlckxpc3RbdGhpcy5saXN0RWRpdEluZGV4XS50ZXh0ID0gdGhpcy5mb3JtLnRleHQ7DQogICAgICB1cGRhdGVBbm5vdGF0ZVRleHRJbmZvQXBpKHRoaXMuZmlsdGVyTGlzdFt0aGlzLmxpc3RFZGl0SW5kZXhdKTsNCiAgICAgIHRoaXMubGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgIGlmIChpdGVtLmlkID09PSB0aGlzLmhhbmRsZUl0ZW1JZCkgew0KICAgICAgICAgIGl0ZW0uZGVzY3JpcHRpb24gPSB0aGlzLmZvcm0uZGVzY3JpcHRpb247DQogICAgICAgICAgaXRlbS50ZXh0ID0gdGhpcy5mb3JtLnRleHQ7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgICAgdGhpcy5zaG93RWRpdEZvcm0gPSBmYWxzZTsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqIOWIoOmZpOaWh+acrA0KICAgICAqLw0KICAgIGhhbmRsZURlbGV0ZShpbmRleCkgew0KICAgICAgbGV0IGlkID0gdGhpcy5maWx0ZXJMaXN0W2luZGV4XS5pZDsNCiAgICAgIGRlbGV0ZUFubm90YXRlVGV4dEFwaShpZCk7DQogICAgICB0aGlzLmZpbHRlckxpc3Quc3BsaWNlKGluZGV4LCAxKTsNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saXN0Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGlmICh0aGlzLmxpc3RbaV0uaWQgPT0gaWQpIHsNCiAgICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKGksIDEpOw0KICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1c2VyL3NldEFubm90YXRlVGV4dExpc3QiLCB0aGlzLmxpc3QpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/annotateTextList","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 按钮组 -->\r\n    <div class=\"button-group\">\r\n      <div class=\"button-group-item\">\r\n        <el-upload\r\n          class=\"upload-demo\"\r\n          name=\"file\"\r\n          multiple\r\n          accept=\"text/plain\"\r\n          :headers=\"{ 'annotate-system-token': token }\"\r\n          action=\"http://localhost:8000/api/annotate_text/upload/\"\r\n          :on-success=\"handleSuccess\"\r\n          :on-error=\"handleError\"\r\n          :show-file-list=\"false\"\r\n        >\r\n          <el-button type=\"primary\">\r\n            导入数据\r\n          </el-button>\r\n        </el-upload>\r\n      </div>\r\n      <div class=\"button-group-item\">\r\n        <el-button type=\"primary\" @click=\"exportData\">\r\n          导出数据\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"clear\">\r\n      <el-button type=\"danger\" @click=\"removeAll\">\r\n        清空\r\n      </el-button>\r\n    </div>\r\n    <!-- 搜索框 -->\r\n    <div class=\"search\">\r\n      <el-input\r\n        v-model=\"keywords\"\r\n        placeholder=\"请搜索关键词\"\r\n        class=\"input-with-select\"\r\n        @input=\"search\"\r\n      >\r\n        <el-select slot=\"prepend\" v-model=\"searchTarget\">\r\n          <el-option label=\"描述\" value=\"description\"></el-option>\r\n          <el-option label=\"文本\" value=\"text\"></el-option>\r\n        </el-select>\r\n        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\" />\r\n      </el-input>\r\n    </div>\r\n    <div>\r\n      <p>注意:您需要在<strong>标注之前</strong>设置好标签,在标注未完成时添加标签会<strong>清空标注数据</strong></p>\r\n    </div>\r\n    <!-- 表格 -->\r\n    <div>\r\n      <el-table\r\n        v-loading=\"listLoading\"\r\n        :data=\"filterList\"\r\n        element-loading-text=\"Loading\"\r\n        :row-class-name=\"tableRowClassName\"\r\n        border\r\n        fit\r\n      >\r\n        <!-- 序号 -->\r\n        <el-table-column align=\"center\" label=\"序号\" width=\"50\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.$index + 1 }}\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 描述 -->\r\n        <el-table-column label=\"描述\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <p class=\"single-line\">\r\n              {{ scope.row.description }}\r\n            </p>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"文本\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <p class=\"single-line\">\r\n              {{ scope.row.text }}\r\n            </p>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 状态 -->\r\n        <el-table-column\r\n          class-name=\"status-col\"\r\n          label=\"状态\"\r\n          width=\"110\"\r\n          align=\"center\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"scope.row.status | statusFilter\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 操作 -->\r\n        <el-table-column label=\"操作\" width=\"210\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              @click=\"goToAnnotate(scope.$index)\"\r\n            >\r\n              标注\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"success\"\r\n              @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(scope.$index)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <!-- 编辑框 -->\r\n    <el-dialog :visible.sync=\"showEditForm\" :width=\"width\">\r\n      <el-form label-position=\"left\" label-width=\"80px\" :model=\"form\">\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"文本\">\r\n          <el-input\r\n            v-model=\"form.text\"\r\n            type=\"textarea\"\r\n            :autosize=\"{ minRows: 3, maxRows: 5 }\"\r\n            placeholder=\"请输入内容\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"update()\">\r\n          更新\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  deleteAnnotateTextApi,\r\n  updateAnnotateTextInfoApi,\r\n  removeAllAnnotateTextApi,\r\n} from \"@/api/annotateText\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"TableList\",\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        已标注: \"success\",\r\n        未标注: \"gray\",\r\n      };\r\n      return statusMap[status];\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      searchTarget: \"描述\", // 搜索对象\r\n\r\n      keywords: \"\", // 搜索关键词\r\n      filterList: [], //符合条件的数据\r\n      list: [], // 所有数据列表\r\n      listLoading: true, //加载效果\r\n      showEditForm: false, //编辑框的显隐\r\n      listEditIndex: 0, // 编辑索引\r\n      handleItemId: 0, // 操作条目的id\r\n      form: {\r\n        //编辑框数据\r\n        description: \"\",\r\n        text: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    // 编辑框宽度\r\n    width() {\r\n      return window.innerWidth <= 400 ? \"80%\" : \"30%\";\r\n    },\r\n    token() {\r\n      return getToken();\r\n    },\r\n    ...mapGetters([\"annotateTextList\"]),\r\n  },\r\n  mounted() {\r\n    this.list = this.filterList = this.annotateTextList;\r\n    this.listLoading = false;\r\n  },\r\n  methods: {\r\n    /**\r\n     * 上传成功的回调函数\r\n     * @param response 响应数据\r\n     */\r\n    handleSuccess(response) {\r\n      this.$message.success(\"上传成功\");\r\n      this.$store.dispatch(\"user/setAnnotateTextList\", response.data);\r\n\r\n      this.filterList = this.list = response.data;\r\n    },\r\n    /**\r\n     * 上传失败回调函数\r\n     */\r\n    handleError() {\r\n      this.$message.error(\"上传失败\");\r\n    },\r\n    /**\r\n     * 导出数据\r\n     */\r\n    //  TODO 导出数据\r\n    exportData() {},\r\n    /**\r\n     * 清空文本数据\r\n     */\r\n    removeAll() {\r\n      this.$confirm(\"确定要删除吗?\", \"警告\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        removeAllAnnotateTextApi(this.token);\r\n        this.$store.dispatch(\"user/setAnnotateTextList\", []);\r\n        this.list = [];\r\n        this.filterList = [];\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 搜索文本\r\n     */\r\n    search() {\r\n      let keywords = this.keywords.trim();\r\n\r\n      if (this.searchTarget == \"描述\") {\r\n        this.filterList = this.list.filter((item) =>\r\n          item.description.includes(keywords)\r\n        );\r\n      } else {\r\n        this.filterList = this.list.filter((item) =>\r\n          item[this.searchTarget].includes(keywords)\r\n        );\r\n      }\r\n    },\r\n    /**\r\n     * 表格样式\r\n     */\r\n    tableRowClassName({ row, rowIndex }) {\r\n      row;\r\n      if (rowIndex % 2) {\r\n        return \"highlight-row\";\r\n      }\r\n      return \"\";\r\n    },\r\n    /**\r\n     * 前往标注页面\r\n     */\r\n    goToAnnotate(index) {\r\n      // 设置标注文本\r\n      this.$store.dispatch(\r\n        \"annotate/setAnnotateText\",\r\n        this.filterList[index].text\r\n      );\r\n      this.$router.push(\"/entityAnnotate\");\r\n    },\r\n    /**\r\n     * 编辑\r\n     * @param {object} row 操作当前行数据\r\n     */\r\n    handleEdit(index, row) {\r\n      this.showEditForm = true;\r\n      this.listEditIndex = index;\r\n      this.form.description = row.description;\r\n      this.form.text = row.text;\r\n      this.handleItemId = row.id;\r\n    },\r\n    /**\r\n     * 更新数据\r\n     */\r\n    update() {\r\n      this.filterList[this.listEditIndex].description = this.form.description;\r\n      this.filterList[this.listEditIndex].text = this.form.text;\r\n      updateAnnotateTextInfoApi(this.filterList[this.listEditIndex]);\r\n      this.list.forEach((item) => {\r\n        if (item.id === this.handleItemId) {\r\n          item.description = this.form.description;\r\n          item.text = this.form.text;\r\n        }\r\n      });\r\n      this.showEditForm = false;\r\n    },\r\n    /**\r\n     * 删除文本\r\n     */\r\n    handleDelete(index) {\r\n      let id = this.filterList[index].id;\r\n      deleteAnnotateTextApi(id);\r\n      this.filterList.splice(index, 1);\r\n      for (let i = 0; i < this.list.length; i++) {\r\n        if (this.list[i].id == id) {\r\n          this.list.splice(i, 1);\r\n          this.$store.dispatch(\"user/setAnnotateTextList\", this.list);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n// 按钮组\r\n.button-group {\r\n  width: 100%;\r\n  display: inline;\r\n  margin: 0 20px 20px 20px;\r\n  &-item {\r\n    margin-right: 20px;\r\n    display: inline-block;\r\n  }\r\n}\r\n// 清空按钮\r\n.clear {\r\n  float: right;\r\n  margin-bottom: 20px;\r\n}\r\n// 搜索框\r\n.search {\r\n  margin-bottom: 20px;\r\n  .el-select {\r\n    width: 150px;\r\n  }\r\n}\r\n// 表格样式\r\n.el-table .highlight-row {\r\n  background: #ebf0fa;\r\n}\r\n// 单行显示文本\r\n.single-line {\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue","mtime":1639627257308},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRW50aXR5SXRlbSBmcm9tICIuL0VudGl0eUl0ZW0iOw0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgRW50aXR5SXRlbSwNCiAgfSwNCiAgcHJvcHM6IHsNCiAgICAvLyDmiYDmnInnmoTmoIfnrb4NCiAgICB0YWdzOiB7DQogICAgICB0eXBlOiBBcnJheSwNCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfSwNCiAgICAvLyDmr4/kuKrlrZfkv6Hmga8NCiAgICBlbnRpdGllczogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiBbXSwNCiAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgIH0sDQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgY2h1bmtzKCkgew0KICAgICAgbGV0IGNodW5rcyA9IFtdOw0KICAgICAgY29uc3QgZW50aXRpZXMgPSB0aGlzLmVudGl0aWVzOw0KICAgICAgZm9yIChjb25zdCBlbnRpdHkgb2YgZW50aXRpZXMpIHsNCiAgICAgICAgY2h1bmtzLnB1c2goew0KICAgICAgICAgIHN0YW5kYXJkVHlwZTogZW50aXR5LnN0YW5kYXJkX2xhYmVsLA0KICAgICAgICAgIHByZWRpY3RUeXBlOiBlbnRpdHkucHJlZGljdF9sYWJlbCwNCiAgICAgICAgICBzdGFuZGFyZENvbG9yOiB0aGlzLnBpY2tDb2xvcihlbnRpdHkuc3RhbmRhcmRfdHlwZSksDQogICAgICAgICAgcHJlZGljdENvbG9yOiB0aGlzLnBpY2tDb2xvcihlbnRpdHkucHJlZGljdF90eXBlKSwNCiAgICAgICAgICB0ZXh0OiBlbnRpdHkudGV4dCwNCiAgICAgICAgfSk7DQogICAgICB9DQogICAgICByZXR1cm4gY2h1bmtzOw0KICAgIH0sDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvKioNCiAgICAgKiDojrflj5bmoIfnrb7nmoTmoLflvI/vvIzmsqHmnInliJnmmL7npLrnmb3oibINCiAgICAgKiBAcGFyYW0gdHlwZSDmoIfnrb7nsbvlnosNCiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfCp9IOminOiJsg0KICAgICAqLw0KICAgIHBpY2tDb2xvcih0eXBlKSB7DQogICAgICBmb3IgKGNvbnN0IHRhZyBvZiB0aGlzLnRhZ3MpIHsNCiAgICAgICAgaWYgKHRhZy50ZXh0ICYmIHRhZy50ZXh0ID09IHR5cGUpIHsNCiAgICAgICAgICByZXR1cm4gdGFnLmNvbG9yOw0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gIiNmZmZmZmYiOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["EntityItemBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EntityItemBox.vue","sourceRoot":"src/views/errorAnalysis/textAnalysis/components","sourcesContent":["<template>\r\n  <div class=\"highlight-container highlight-container--bottom-labels\">\r\n    <entity-item\r\n      v-for=\"(chunk, i) in chunks\"\r\n      :key=\"i\"\r\n      :content=\"chunk.text\"\r\n      :standard-type=\"chunk.standardType\"\r\n      :predict-type=\"chunk.predictType\"\r\n      :standard-color=\"chunk.standardColor\"\r\n      :predict-color=\"chunk.predictColor\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EntityItem from \"./EntityItem\";\r\nexport default {\r\n  components: {\r\n    EntityItem,\r\n  },\r\n  props: {\r\n    // 所有的标签\r\n    tags: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n    // 每个字信息\r\n    entities: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    chunks() {\r\n      let chunks = [];\r\n      const entities = this.entities;\r\n      for (const entity of entities) {\r\n        chunks.push({\r\n          standardType: entity.standard_label,\r\n          predictType: entity.predict_label,\r\n          standardColor: this.pickColor(entity.standard_type),\r\n          predictColor: this.pickColor(entity.predict_type),\r\n          text: entity.text,\r\n        });\r\n      }\r\n      return chunks;\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取标签的样式，没有则显示白色\r\n     * @param type 标签类型\r\n     * @returns {string|*} 颜色\r\n     */\r\n    pickColor(type) {\r\n      for (const tag of this.tags) {\r\n        if (tag.text && tag.text == type) {\r\n          return tag.color;\r\n        }\r\n      }\r\n      return \"#ffffff\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.highlight-container .highlight-container--bottom-labels {\r\n  align-items: flex-start;\r\n  margin-top: 6px;\r\n}\r\n\r\n.highlight-container {\r\n  line-height: 42px !important;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  white-space: pre-wrap;\r\n  cursor: default;\r\n}\r\n</style>\r\n"]}]}
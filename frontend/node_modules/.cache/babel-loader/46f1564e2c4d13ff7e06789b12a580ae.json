{"remainingRequest":"F:\\BS\\annotate-system\\frontend\\node_modules\\babel-loader\\lib\\index.js!F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue","mtime":1639627257308},{"path":"F:\\BS\\annotate-system\\frontend\\babel.config.js","mtime":1639627257111},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkY6XFxCU1xcYW5ub3RhdGUtc3lzdGVtXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBFbnRpdHlJdGVtIGZyb20gIi4vRW50aXR5SXRlbSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBFbnRpdHlJdGVtOiBFbnRpdHlJdGVtCiAgfSwKICBwcm9wczogewogICAgLy8g5omA5pyJ55qE5qCH562+CiAgICB0YWdzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLy8g5q+P5Liq5a2X5L+h5oGvCiAgICBlbnRpdGllczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNodW5rczogZnVuY3Rpb24gY2h1bmtzKCkgewogICAgICB2YXIgY2h1bmtzID0gW107CiAgICAgIHZhciBlbnRpdGllcyA9IHRoaXMuZW50aXRpZXM7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZW50aXRpZXMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZW50aXR5ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBjaHVua3MucHVzaCh7CiAgICAgICAgICAgIHN0YW5kYXJkVHlwZTogZW50aXR5LnN0YW5kYXJkX2xhYmVsLAogICAgICAgICAgICBwcmVkaWN0VHlwZTogZW50aXR5LnByZWRpY3RfbGFiZWwsCiAgICAgICAgICAgIHN0YW5kYXJkQ29sb3I6IHRoaXMucGlja0NvbG9yKGVudGl0eS5zdGFuZGFyZF90eXBlKSwKICAgICAgICAgICAgcHJlZGljdENvbG9yOiB0aGlzLnBpY2tDb2xvcihlbnRpdHkucHJlZGljdF90eXBlKSwKICAgICAgICAgICAgdGV4dDogZW50aXR5LnRleHQKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICByZXR1cm4gY2h1bmtzOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLyoqDQogICAgICog6I635Y+W5qCH562+55qE5qC35byP77yM5rKh5pyJ5YiZ5pi+56S655m96ImyDQogICAgICogQHBhcmFtIHR5cGUg5qCH562+57G75Z6LDQogICAgICogQHJldHVybnMge3N0cmluZ3wqfSDpopzoibINCiAgICAgKi8KICAgIHBpY2tDb2xvcjogZnVuY3Rpb24gcGlja0NvbG9yKHR5cGUpIHsKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnRhZ3MpLAogICAgICAgICAgX3N0ZXAyOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHRhZyA9IF9zdGVwMi52YWx1ZTsKCiAgICAgICAgICBpZiAodGFnLnRleHQgJiYgdGFnLnRleHQgPT0gdHlwZSkgewogICAgICAgICAgICByZXR1cm4gdGFnLmNvbG9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiAiI2ZmZmZmZiI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["EntityItemBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,OAAA,UAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAFA;AAOA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA;AAHA;AARA,GAJA;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;;AAFA,iDAGA,QAHA;AAAA;;AAAA;AAGA,4DAAA;AAAA,cAAA,MAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,YAAA,EAAA,MAAA,CAAA,cADA;AAEA,YAAA,WAAA,EAAA,MAAA,CAAA,aAFA;AAGA,YAAA,aAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,aAAA,CAHA;AAIA,YAAA,YAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,YAAA,CAJA;AAKA,YAAA,IAAA,EAAA,MAAA,CAAA;AALA,WAAA;AAOA;AAXA;AAAA;AAAA;AAAA;AAAA;;AAYA,aAAA,MAAA;AACA;AAdA,GAlBA;AAkCA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,SANA,qBAMA,IANA,EAMA;AAAA,kDACA,KAAA,IADA;AAAA;;AAAA;AACA,+DAAA;AAAA,cAAA,GAAA;;AACA,cAAA,GAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,mBAAA,GAAA,CAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMA,aAAA,SAAA;AACA;AAbA;AAlCA,CAAA","sourcesContent":["<template>\r\n  <div class=\"highlight-container highlight-container--bottom-labels\">\r\n    <entity-item\r\n      v-for=\"(chunk, i) in chunks\"\r\n      :key=\"i\"\r\n      :content=\"chunk.text\"\r\n      :standard-type=\"chunk.standardType\"\r\n      :predict-type=\"chunk.predictType\"\r\n      :standard-color=\"chunk.standardColor\"\r\n      :predict-color=\"chunk.predictColor\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EntityItem from \"./EntityItem\";\r\nexport default {\r\n  components: {\r\n    EntityItem,\r\n  },\r\n  props: {\r\n    // 所有的标签\r\n    tags: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n    // 每个字信息\r\n    entities: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    chunks() {\r\n      let chunks = [];\r\n      const entities = this.entities;\r\n      for (const entity of entities) {\r\n        chunks.push({\r\n          standardType: entity.standard_label,\r\n          predictType: entity.predict_label,\r\n          standardColor: this.pickColor(entity.standard_type),\r\n          predictColor: this.pickColor(entity.predict_type),\r\n          text: entity.text,\r\n        });\r\n      }\r\n      return chunks;\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取标签的样式，没有则显示白色\r\n     * @param type 标签类型\r\n     * @returns {string|*} 颜色\r\n     */\r\n    pickColor(type) {\r\n      for (const tag of this.tags) {\r\n        if (tag.text && tag.text == type) {\r\n          return tag.color;\r\n        }\r\n      }\r\n      return \"#ffffff\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.highlight-container .highlight-container--bottom-labels {\r\n  align-items: flex-start;\r\n  margin-top: 6px;\r\n}\r\n\r\n.highlight-container {\r\n  line-height: 42px !important;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  white-space: pre-wrap;\r\n  cursor: default;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/errorAnalysis/textAnalysis/components"}]}
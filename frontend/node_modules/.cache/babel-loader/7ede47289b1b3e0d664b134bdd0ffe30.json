{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js!F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\errorAnalysis\\textAnalysis\\components\\EntityItemBox.vue","mtime":1639627257308},{"path":"F:\\BS\\annotate-system-3\\frontend\\babel.config.js","mtime":1639627257111},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkY6XFxCU1xcYW5ub3RhdGUtc3lzdGVtLTNcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEVudGl0eUl0ZW0gZnJvbSAiLi9FbnRpdHlJdGVtIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEVudGl0eUl0ZW06IEVudGl0eUl0ZW0KICB9LAogIHByb3BzOiB7CiAgICAvLyDmiYDmnInnmoTmoIfnrb4KICAgIHRhZ3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvLyDmr4/kuKrlrZfkv6Hmga8KICAgIGVudGl0aWVzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2h1bmtzOiBmdW5jdGlvbiBjaHVua3MoKSB7CiAgICAgIHZhciBjaHVua3MgPSBbXTsKICAgICAgdmFyIGVudGl0aWVzID0gdGhpcy5lbnRpdGllczsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbnRpdGllcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBlbnRpdHkgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIGNodW5rcy5wdXNoKHsKICAgICAgICAgICAgc3RhbmRhcmRUeXBlOiBlbnRpdHkuc3RhbmRhcmRfbGFiZWwsCiAgICAgICAgICAgIHByZWRpY3RUeXBlOiBlbnRpdHkucHJlZGljdF9sYWJlbCwKICAgICAgICAgICAgc3RhbmRhcmRDb2xvcjogdGhpcy5waWNrQ29sb3IoZW50aXR5LnN0YW5kYXJkX3R5cGUpLAogICAgICAgICAgICBwcmVkaWN0Q29sb3I6IHRoaXMucGlja0NvbG9yKGVudGl0eS5wcmVkaWN0X3R5cGUpLAogICAgICAgICAgICB0ZXh0OiBlbnRpdHkudGV4dAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjaHVua3M7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioNCiAgICAgKiDojrflj5bmoIfnrb7nmoTmoLflvI/vvIzmsqHmnInliJnmmL7npLrnmb3oibINCiAgICAgKiBAcGFyYW0gdHlwZSDmoIfnrb7nsbvlnosNCiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfCp9IOminOiJsg0KICAgICAqLwogICAgcGlja0NvbG9yOiBmdW5jdGlvbiBwaWNrQ29sb3IodHlwZSkgewogICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMudGFncyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgdGFnID0gX3N0ZXAyLnZhbHVlOwoKICAgICAgICAgIGlmICh0YWcudGV4dCAmJiB0YWcudGV4dCA9PSB0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiB0YWcuY29sb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgfQoKICAgICAgcmV0dXJuICIjZmZmZmZmIjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["EntityItemBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,OAAA,UAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAFA;AAOA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA;AAHA;AARA,GAJA;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;;AAFA,iDAGA,QAHA;AAAA;;AAAA;AAGA,4DAAA;AAAA,cAAA,MAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,YAAA,EAAA,MAAA,CAAA,cADA;AAEA,YAAA,WAAA,EAAA,MAAA,CAAA,aAFA;AAGA,YAAA,aAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,aAAA,CAHA;AAIA,YAAA,YAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,YAAA,CAJA;AAKA,YAAA,IAAA,EAAA,MAAA,CAAA;AALA,WAAA;AAOA;AAXA;AAAA;AAAA;AAAA;AAAA;;AAYA,aAAA,MAAA;AACA;AAdA,GAlBA;AAkCA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,SANA,qBAMA,IANA,EAMA;AAAA,kDACA,KAAA,IADA;AAAA;;AAAA;AACA,+DAAA;AAAA,cAAA,GAAA;;AACA,cAAA,GAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,mBAAA,GAAA,CAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMA,aAAA,SAAA;AACA;AAbA;AAlCA,CAAA","sourcesContent":["<template>\r\n  <div class=\"highlight-container highlight-container--bottom-labels\">\r\n    <entity-item\r\n      v-for=\"(chunk, i) in chunks\"\r\n      :key=\"i\"\r\n      :content=\"chunk.text\"\r\n      :standard-type=\"chunk.standardType\"\r\n      :predict-type=\"chunk.predictType\"\r\n      :standard-color=\"chunk.standardColor\"\r\n      :predict-color=\"chunk.predictColor\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EntityItem from \"./EntityItem\";\r\nexport default {\r\n  components: {\r\n    EntityItem,\r\n  },\r\n  props: {\r\n    // 所有的标签\r\n    tags: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n    // 每个字信息\r\n    entities: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    chunks() {\r\n      let chunks = [];\r\n      const entities = this.entities;\r\n      for (const entity of entities) {\r\n        chunks.push({\r\n          standardType: entity.standard_label,\r\n          predictType: entity.predict_label,\r\n          standardColor: this.pickColor(entity.standard_type),\r\n          predictColor: this.pickColor(entity.predict_type),\r\n          text: entity.text,\r\n        });\r\n      }\r\n      return chunks;\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取标签的样式，没有则显示白色\r\n     * @param type 标签类型\r\n     * @returns {string|*} 颜色\r\n     */\r\n    pickColor(type) {\r\n      for (const tag of this.tags) {\r\n        if (tag.text && tag.text == type) {\r\n          return tag.color;\r\n        }\r\n      }\r\n      return \"#ffffff\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.highlight-container .highlight-container--bottom-labels {\r\n  align-items: flex-start;\r\n  margin-top: 6px;\r\n}\r\n\r\n.highlight-container {\r\n  line-height: 42px !important;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  white-space: pre-wrap;\r\n  cursor: default;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/errorAnalysis/textAnalysis/components"}]}
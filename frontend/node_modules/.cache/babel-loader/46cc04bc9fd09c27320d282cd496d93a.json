{"remainingRequest":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js!F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BS\\annotate-system-3\\frontend\\src\\views\\videoCut\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BS\\annotate-system-3\\frontend\\src\\views\\videoCut\\index.vue","mtime":1640092901650},{"path":"F:\\BS\\annotate-system-3\\frontend\\babel.config.js","mtime":1639627257111},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1639628024341},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639628022585},{"path":"F:\\BS\\annotate-system-3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639628023030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA,SACA,qBADA,EAEA,yBAFA,EAGA,wBAHA,QAIA,oBAJA;AAKA,SAAA,QAAA,QAAA,cAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,GAAA,EAAA,SADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,aAAA,SAAA,CAAA,MAAA,CAAA;AACA;AAPA,GAFA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AACA;AACA,MAAA,QAAA,EAAA,OAAA,CAAA,yBAAA,CAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAIA;AACA,MAAA,UAAA,EAAA,EALA;AAKA;AACA,MAAA,IAAA,EAAA,EANA;AAMA;AACA,MAAA,WAAA,EAAA,IAPA;AAOA;AACA,MAAA,YAAA,EAAA,KARA;AAQA;AACA,MAAA,aAAA,EAAA,CATA;AASA;AACA,MAAA,YAAA,EAAA,CAVA;AAUA;AACA,MAAA,IAAA,EAAA;AACA;AACA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AAHA;AAXA,KAAA;AAiBA,GA9BA;AA+BA,EAAA,QAAA;AACA;AACA,IAAA,KAFA,mBAEA;AACA,aAAA,MAAA,CAAA,UAAA,IAAA,GAAA,GAAA,KAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,KALA,mBAKA;AACA,aAAA,QAAA,EAAA;AACA;AAPA,KAQA,UAAA,CAAA,CAAA,kBAAA,CAAA,CARA,CA/BA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,IAAA,GAAA,KAAA,UAAA,GAAA,KAAA,gBAAA;AACA,SAAA,WAAA,GAAA,KAAA;AACA,GA5CA;AA6CA,EAAA,OAAA,EAAA;AAEA,IAAA,UAFA,wBAEA;AACA,UAAA,CAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,cAAA,CAAA,UAAA,CAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,MAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,SAAA,CAAA,YAAA,CAAA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,KAAA,MAAA;AACA,KAVA;AAYA,IAAA,cAZA,0BAYA,IAZA,EAYA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,IAAA,KAAA,YAAA,IAAA,WAAA,IAAA,WAAA,IAAA,WAAA,IAAA,WAAA,IAAA,YAAA;;AAEA,UAAA,CAAA,OAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,kBAAA;AACA;;AACA,aAAA,OAAA;AACA,KAnBA;;AAoBA;AACA;AACA;AACA;AACA,IAAA,aAxBA,yBAwBA,QAxBA,EAwBA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,0BAAA,EAAA,QAAA,CAAA,IAAA;AAEA,WAAA,UAAA,GAAA,KAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,KA7BA;;AA8BA;AACA;AACA;AACA,IAAA,WAjCA,yBAiCA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA,KAnCA;;AAoCA;AACA;AACA;AACA;AACA,IAAA,UAxCA,wBAwCA,CACA,CAzCA;;AA0CA;AACA;AACA;AACA,IAAA,SA7CA,uBA6CA;AAAA;;AACA,WAAA,QAAA,CAAA,SAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,wBAAA,CAAA,KAAA,CAAA,KAAA,CAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,0BAAA,EAAA,EAAA;;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,OATA;AAUA,KAxDA;;AA0DA;AACA;AACA;AACA,IAAA,MA7DA,oBA6DA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,QAAA,CAAA,IAAA,EAAA;;AAEA,UAAA,KAAA,YAAA,IAAA,IAAA,EAAA;AACA,aAAA,UAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,iBACA,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CADA;AAAA,SAAA,CAAA;AAGA,OAJA,MAIA;AACA,aAAA,UAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,iBACA,IAAA,CAAA,MAAA,CAAA,YAAA,CAAA,CAAA,QAAA,CAAA,QAAA,CADA;AAAA,SAAA,CAAA;AAGA;AACA,KAzEA;;AA0EA;AACA;AACA;AACA,IAAA,iBA7EA,mCA6EA;AAAA,UAAA,GAAA,QAAA,GAAA;AAAA,UAAA,QAAA,QAAA,QAAA;AACA,MAAA,GAAA;;AACA,UAAA,QAAA,GAAA,CAAA,EAAA;AACA,eAAA,eAAA;AACA;;AACA,aAAA,EAAA;AACA,KAnFA;;AAoFA;AACA;AACA;AACA,IAAA,YAvFA,wBAuFA,KAvFA,EAuFA;AACA;AACA,WAAA,MAAA,CAAA,QAAA,CACA,0BADA,EAEA,KAAA,UAAA,CAAA,KAAA,EAAA,IAFA;AAIA,WAAA,OAAA,CAAA,IAAA,CAAA,iBAAA;AACA,KA9FA;;AA+FA;AACA;AACA;AACA;AACA,IAAA,UAnGA,sBAmGA,KAnGA,EAmGA,GAnGA,EAmGA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,GAAA,CAAA,WAAA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,WAAA,YAAA,GAAA,GAAA,CAAA,EAAA;AACA,KAzGA;;AA0GA;AACA;AACA;AACA,IAAA,MA7GA,oBA6GA;AAAA;;AACA,WAAA,UAAA,CAAA,KAAA,aAAA,EAAA,WAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,WAAA,UAAA,CAAA,KAAA,aAAA,EAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,MAAA,yBAAA,CAAA,KAAA,UAAA,CAAA,KAAA,aAAA,CAAA,CAAA;AACA,WAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,EAAA,KAAA,MAAA,CAAA,YAAA,EAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,OALA;AAMA,WAAA,YAAA,GAAA,KAAA;AACA,KAxHA;;AAyHA;AACA;AACA;AACA,IAAA,YA5HA,wBA4HA,KA5HA,EA4HA;AACA,UAAA,EAAA,GAAA,KAAA,UAAA,CAAA,KAAA,EAAA,EAAA;AACA,MAAA,qBAAA,CAAA,EAAA,CAAA;AACA,WAAA,UAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,IAAA,CAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,0BAAA,EAAA,KAAA,IAAA;AACA;AACA;AACA;AAtIA;AA7CA,CAAA","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 按钮组 -->\n    <div class=\"button-group\">\n      <div class=\"button-group-item\">\n        <el-upload\n          class=\"upload-demo\"\n          name=\"file\"\n          multiple\n          accept=\"image/jpeg,image/gif,image/png,video/mp4,video/avi,video/rmvb\"\n          :before-upload=\"onBeforeUpload\"\n          :headers=\"{ 'annotate-system-token': token }\"\n          action=\"http://localhost:8000/api/annotate_text/upload/\"\n          :on-success=\"handleSuccess\"\n          :on-error=\"handleError\"\n          :show-file-list=\"false\"\n        >\n          <el-button type=\"primary\">\n            导入图片\n          </el-button>\n        </el-upload>\n      </div>\n    </div>\n    <div class=\"clear\">\n      <el-button type=\"danger\" @click=\"removeAll\">\n        清空\n      </el-button>\n    </div>\n    <!-- 搜索框 -->\n    <div class=\"search\">\n      <el-input\n        v-model=\"keywords\"\n        placeholder=\"请搜索关键词\"\n        class=\"input-with-select\"\n        @input=\"search\"\n      >\n        <el-select slot=\"prepend\" v-model=\"searchTarget\">\n          <el-option label=\"描述\" value=\"description\"></el-option>\n          <el-option label=\"文本\" value=\"text\"></el-option>\n        </el-select>\n        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\"/>\n      </el-input>\n    </div>\n    <div>\n      <video :src=\"videoSrc\" controls></video>\n      <img :src=\"imgSrc\">\n      <div>\n        <el-button @click=\"cutPicture\">\n          截图\n        </el-button>\n      </div>\n      <canvas id=\"myCanvas\" width=\"343\" height=\"200\"></canvas>\n    </div>\n    <!-- 表格 -->\n    <div>\n      <el-table\n        v-loading=\"listLoading\"\n        :data=\"filterList\"\n        element-loading-text=\"Loading\"\n        :row-class-name=\"tableRowClassName\"\n        border\n        fit\n      >\n        <!-- 序号 -->\n        <el-table-column align=\"center\" label=\"序号\" width=\"50\">\n          <template slot-scope=\"scope\">\n            {{ scope.$index + 1 }}\n          </template>\n        </el-table-column>\n        <!-- 描述 -->\n        <el-table-column label=\"描述\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <p class=\"single-line\">\n              {{ scope.row.description }}\n            </p>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"文本\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <p class=\"single-line\">\n              {{ scope.row.text }}\n            </p>\n          </template>\n        </el-table-column>\n        <!-- 状态 -->\n        <el-table-column\n          class-name=\"status-col\"\n          label=\"状态\"\n          width=\"110\"\n          align=\"center\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"scope.row.status | statusFilter\">\n              {{ scope.row.status }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <!-- 操作 -->\n        <el-table-column label=\"操作\" width=\"210\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"goToAnnotate(scope.$index)\"\n            >\n              标注\n            </el-button>\n            <el-button\n              size=\"mini\"\n              type=\"success\"\n              @click=\"handleEdit(scope.$index, scope.row)\"\n            >\n              编辑\n            </el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.$index)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <!-- 编辑框 -->\n    <el-dialog :visible.sync=\"showEditForm\" :width=\"width\">\n      <el-form label-position=\"left\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"描述\">\n          <el-input v-model=\"form.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文本\">\n          <el-input\n            v-model=\"form.text\"\n            type=\"textarea\"\n            :autosize=\"{ minRows: 3, maxRows: 5 }\"\n            placeholder=\"请输入内容\"\n          >\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"update()\">\n          更新\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  deleteAnnotateTextApi,\n  updateAnnotateTextInfoApi,\n  removeAllAnnotateTextApi,\n} from \"@/api/annotateText\";\nimport {getToken} from \"@/utils/auth\";\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  name: \"videoCut\",\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        已标注: \"success\",\n        未标注: \"gray\",\n      };\n      return statusMap[status];\n    },\n  },\n\n  data() {\n    return {\n      searchTarget: \"描述\", // 搜索对象\n      videoSrc: require(\"../../assets/test_1.mp4\"),\n      imgSrc: [],\n      keywords: \"\", // 搜索关键词\n      filterList: [], //符合条件的数据\n      list: [], // 所有数据列表\n      listLoading: true, //加载效果\n      showEditForm: false, //编辑框的显隐\n      listEditIndex: 0, // 编辑索引\n      handleItemId: 0, // 操作条目的id\n      form: {\n        //编辑框数据\n        description: \"\",\n        text: \"\",\n      },\n    };\n  },\n  computed: {\n    // 编辑框宽度\n    width() {\n      return window.innerWidth <= 400 ? \"80%\" : \"30%\";\n    },\n    token() {\n      return getToken();\n    },\n    ...mapGetters([\"annotateTextList\"]),\n  },\n  mounted() {\n    this.list = this.filterList = this.annotateTextList;\n    this.listLoading = false;\n  },\n  methods: {\n\n    cutPicture() {\n      var v = document.querySelector(\"video\");\n      let canvas = document.getElementById('myCanvas')\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(v, 0, 0, 343, 200);\n      var oGrayImg = canvas.toDataURL('image/jpeg');\n      this.imgSrc.push(oGrayImg)\n      this.$store.dispatch(\"annotate/setVideoImgs\", this.imgSrc);\n    },\n\n    onBeforeUpload(file) {\n      const isIMAGE = file.type === 'image/jpeg' || 'image/gif' || 'image/png' || 'video/mp4' || 'video/avi' || 'video/rmvb';\n\n      if (!isIMAGE) {\n        this.$message.error('上传文件只能是图片或者视频格式!');\n      }\n      return isIMAGE;\n    },\n    /**\n     * 上传成功的回调函数\n     * @param response 响应数据\n     */\n    handleSuccess(response) {\n      this.$message.success(\"上传成功\");\n      this.$store.dispatch(\"user/setAnnotateTextList\", response.data);\n\n      this.filterList = this.list = response.data;\n    },\n    /**\n     * 上传失败回调函数\n     */\n    handleError() {\n      this.$message.error(\"上传失败\");\n    },\n    /**\n     * 导出数据\n     */\n    //  TODO 导出数据\n    exportData() {\n    },\n    /**\n     * 清空文本数据\n     */\n    removeAll() {\n      this.$confirm(\"确定要删除吗?\", \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        removeAllAnnotateTextApi(this.token);\n        this.$store.dispatch(\"user/setAnnotateTextList\", []);\n        this.list = [];\n        this.filterList = [];\n      });\n    },\n\n    /**\n     * 搜索文本\n     */\n    search() {\n      let keywords = this.keywords.trim();\n\n      if (this.searchTarget == \"描述\") {\n        this.filterList = this.list.filter((item) =>\n          item.description.includes(keywords)\n        );\n      } else {\n        this.filterList = this.list.filter((item) =>\n          item[this.searchTarget].includes(keywords)\n        );\n      }\n    },\n    /**\n     * 表格样式\n     */\n    tableRowClassName({row, rowIndex}) {\n      row;\n      if (rowIndex % 2) {\n        return \"highlight-row\";\n      }\n      return \"\";\n    },\n    /**\n     * 前往标注页面\n     */\n    goToAnnotate(index) {\n      // 设置标注文本\n      this.$store.dispatch(\n        \"annotate/setAnnotateText\",\n        this.filterList[index].text\n      );\n      this.$router.push(\"/entityAnnotate\");\n    },\n    /**\n     * 编辑\n     * @param {object} row 操作当前行数据\n     */\n    handleEdit(index, row) {\n      this.showEditForm = true;\n      this.listEditIndex = index;\n      this.form.description = row.description;\n      this.form.text = row.text;\n      this.handleItemId = row.id;\n    },\n    /**\n     * 更新数据\n     */\n    update() {\n      this.filterList[this.listEditIndex].description = this.form.description;\n      this.filterList[this.listEditIndex].text = this.form.text;\n      updateAnnotateTextInfoApi(this.filterList[this.listEditIndex]);\n      this.list.forEach((item) => {\n        if (item.id === this.handleItemId) {\n          item.description = this.form.description;\n          item.text = this.form.text;\n        }\n      });\n      this.showEditForm = false;\n    },\n    /**\n     * 删除文本\n     */\n    handleDelete(index) {\n      let id = this.filterList[index].id;\n      deleteAnnotateTextApi(id);\n      this.filterList.splice(index, 1);\n      for (let i = 0; i < this.list.length; i++) {\n        if (this.list[i].id == id) {\n          this.list.splice(i, 1);\n          this.$store.dispatch(\"user/setAnnotateTextList\", this.list);\n        }\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n// 按钮组\n.button-group {\n  width: 100%;\n  display: inline;\n  margin: 0 20px 20px 20px;\n\n  &-item {\n    margin-right: 20px;\n    display: inline-block;\n  }\n}\n\n// 清空按钮\n.clear {\n  float: right;\n  margin-bottom: 20px;\n}\n\n// 搜索框\n.search {\n  margin-bottom: 20px;\n\n  .el-select {\n    width: 150px;\n  }\n}\n\n// 表格样式\n.el-table .highlight-row {\n  background: #ebf0fa;\n}\n\n// 单行显示文本\n.single-line {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n</style>\n"],"sourceRoot":"src/views/videoCut"}]}